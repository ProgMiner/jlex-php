<?php
include '../lemon/c.php';
/* This is a lexer for the C language */

class CLexer extends JLexPHP\Base  {
	const YY_BUFFER_SIZE = 512;
	const YY_F = -1;
	const YY_NO_STATE = -1;
	const YY_NOT_ACCEPT = 0;
	const YY_START = 1;
	const YY_END = 2;
	const YY_NO_ANCHOR = 4;
	const YY_BOL = 128;
	const YY_EOF = 129;

	/* blah */
	protected $yy_count_chars = true;
	protected $yy_count_lines = true;

	public function __construct($stream) {
		parent::__construct($stream);
		$this->yy_lexical_state = self::YYINITIAL;
	}

	const YYINITIAL = 0;
	const COMMENT = 1;
	static $yy_state_dtrans = [
		0,
		134
	];
	static $yy_acpt = [
		/* 0 */ self::YY_NOT_ACCEPT,
		/* 1 */ self::YY_NO_ANCHOR,
		/* 2 */ self::YY_NO_ANCHOR,
		/* 3 */ self::YY_NO_ANCHOR,
		/* 4 */ self::YY_NO_ANCHOR,
		/* 5 */ self::YY_NO_ANCHOR,
		/* 6 */ self::YY_NO_ANCHOR,
		/* 7 */ self::YY_NO_ANCHOR,
		/* 8 */ self::YY_NO_ANCHOR,
		/* 9 */ self::YY_NO_ANCHOR,
		/* 10 */ self::YY_NO_ANCHOR,
		/* 11 */ self::YY_NO_ANCHOR,
		/* 12 */ self::YY_NO_ANCHOR,
		/* 13 */ self::YY_NO_ANCHOR,
		/* 14 */ self::YY_NO_ANCHOR,
		/* 15 */ self::YY_NO_ANCHOR,
		/* 16 */ self::YY_NO_ANCHOR,
		/* 17 */ self::YY_NO_ANCHOR,
		/* 18 */ self::YY_NO_ANCHOR,
		/* 19 */ self::YY_NO_ANCHOR,
		/* 20 */ self::YY_NO_ANCHOR,
		/* 21 */ self::YY_NO_ANCHOR,
		/* 22 */ self::YY_NO_ANCHOR,
		/* 23 */ self::YY_NO_ANCHOR,
		/* 24 */ self::YY_NO_ANCHOR,
		/* 25 */ self::YY_NO_ANCHOR,
		/* 26 */ self::YY_NO_ANCHOR,
		/* 27 */ self::YY_NO_ANCHOR,
		/* 28 */ self::YY_NO_ANCHOR,
		/* 29 */ self::YY_NO_ANCHOR,
		/* 30 */ self::YY_NO_ANCHOR,
		/* 31 */ self::YY_NO_ANCHOR,
		/* 32 */ self::YY_NO_ANCHOR,
		/* 33 */ self::YY_NO_ANCHOR,
		/* 34 */ self::YY_NO_ANCHOR,
		/* 35 */ self::YY_NO_ANCHOR,
		/* 36 */ self::YY_NO_ANCHOR,
		/* 37 */ self::YY_NO_ANCHOR,
		/* 38 */ self::YY_NO_ANCHOR,
		/* 39 */ self::YY_NO_ANCHOR,
		/* 40 */ self::YY_NO_ANCHOR,
		/* 41 */ self::YY_NO_ANCHOR,
		/* 42 */ self::YY_NO_ANCHOR,
		/* 43 */ self::YY_NO_ANCHOR,
		/* 44 */ self::YY_NO_ANCHOR,
		/* 45 */ self::YY_NO_ANCHOR,
		/* 46 */ self::YY_NO_ANCHOR,
		/* 47 */ self::YY_NO_ANCHOR,
		/* 48 */ self::YY_NO_ANCHOR,
		/* 49 */ self::YY_NO_ANCHOR,
		/* 50 */ self::YY_NO_ANCHOR,
		/* 51 */ self::YY_NO_ANCHOR,
		/* 52 */ self::YY_NO_ANCHOR,
		/* 53 */ self::YY_NO_ANCHOR,
		/* 54 */ self::YY_NO_ANCHOR,
		/* 55 */ self::YY_NO_ANCHOR,
		/* 56 */ self::YY_NO_ANCHOR,
		/* 57 */ self::YY_NO_ANCHOR,
		/* 58 */ self::YY_NO_ANCHOR,
		/* 59 */ self::YY_NO_ANCHOR,
		/* 60 */ self::YY_NO_ANCHOR,
		/* 61 */ self::YY_NO_ANCHOR,
		/* 62 */ self::YY_NO_ANCHOR,
		/* 63 */ self::YY_NO_ANCHOR,
		/* 64 */ self::YY_NO_ANCHOR,
		/* 65 */ self::YY_NO_ANCHOR,
		/* 66 */ self::YY_NO_ANCHOR,
		/* 67 */ self::YY_NO_ANCHOR,
		/* 68 */ self::YY_NO_ANCHOR,
		/* 69 */ self::YY_NO_ANCHOR,
		/* 70 */ self::YY_NO_ANCHOR,
		/* 71 */ self::YY_NO_ANCHOR,
		/* 72 */ self::YY_NO_ANCHOR,
		/* 73 */ self::YY_NO_ANCHOR,
		/* 74 */ self::YY_NO_ANCHOR,
		/* 75 */ self::YY_NO_ANCHOR,
		/* 76 */ self::YY_NO_ANCHOR,
		/* 77 */ self::YY_NO_ANCHOR,
		/* 78 */ self::YY_NO_ANCHOR,
		/* 79 */ self::YY_NO_ANCHOR,
		/* 80 */ self::YY_NO_ANCHOR,
		/* 81 */ self::YY_NO_ANCHOR,
		/* 82 */ self::YY_NO_ANCHOR,
		/* 83 */ self::YY_NO_ANCHOR,
		/* 84 */ self::YY_NO_ANCHOR,
		/* 85 */ self::YY_NO_ANCHOR,
		/* 86 */ self::YY_NO_ANCHOR,
		/* 87 */ self::YY_NO_ANCHOR,
		/* 88 */ self::YY_NO_ANCHOR,
		/* 89 */ self::YY_NO_ANCHOR,
		/* 90 */ self::YY_NO_ANCHOR,
		/* 91 */ self::YY_NO_ANCHOR,
		/* 92 */ self::YY_NO_ANCHOR,
		/* 93 */ self::YY_NO_ANCHOR,
		/* 94 */ self::YY_NO_ANCHOR,
		/* 95 */ self::YY_NO_ANCHOR,
		/* 96 */ self::YY_NOT_ACCEPT,
		/* 97 */ self::YY_NO_ANCHOR,
		/* 98 */ self::YY_NO_ANCHOR,
		/* 99 */ self::YY_NO_ANCHOR,
		/* 100 */ self::YY_NO_ANCHOR,
		/* 101 */ self::YY_NO_ANCHOR,
		/* 102 */ self::YY_NO_ANCHOR,
		/* 103 */ self::YY_NO_ANCHOR,
		/* 104 */ self::YY_NO_ANCHOR,
		/* 105 */ self::YY_NO_ANCHOR,
		/* 106 */ self::YY_NOT_ACCEPT,
		/* 107 */ self::YY_NO_ANCHOR,
		/* 108 */ self::YY_NO_ANCHOR,
		/* 109 */ self::YY_NO_ANCHOR,
		/* 110 */ self::YY_NO_ANCHOR,
		/* 111 */ self::YY_NO_ANCHOR,
		/* 112 */ self::YY_NOT_ACCEPT,
		/* 113 */ self::YY_NO_ANCHOR,
		/* 114 */ self::YY_NOT_ACCEPT,
		/* 115 */ self::YY_NO_ANCHOR,
		/* 116 */ self::YY_NOT_ACCEPT,
		/* 117 */ self::YY_NO_ANCHOR,
		/* 118 */ self::YY_NOT_ACCEPT,
		/* 119 */ self::YY_NO_ANCHOR,
		/* 120 */ self::YY_NOT_ACCEPT,
		/* 121 */ self::YY_NO_ANCHOR,
		/* 122 */ self::YY_NOT_ACCEPT,
		/* 123 */ self::YY_NO_ANCHOR,
		/* 124 */ self::YY_NOT_ACCEPT,
		/* 125 */ self::YY_NO_ANCHOR,
		/* 126 */ self::YY_NOT_ACCEPT,
		/* 127 */ self::YY_NO_ANCHOR,
		/* 128 */ self::YY_NOT_ACCEPT,
		/* 129 */ self::YY_NO_ANCHOR,
		/* 130 */ self::YY_NOT_ACCEPT,
		/* 131 */ self::YY_NO_ANCHOR,
		/* 132 */ self::YY_NOT_ACCEPT,
		/* 133 */ self::YY_NO_ANCHOR,
		/* 134 */ self::YY_NOT_ACCEPT,
		/* 135 */ self::YY_NO_ANCHOR,
		/* 136 */ self::YY_NO_ANCHOR,
		/* 137 */ self::YY_NO_ANCHOR,
		/* 138 */ self::YY_NO_ANCHOR,
		/* 139 */ self::YY_NO_ANCHOR,
		/* 140 */ self::YY_NO_ANCHOR,
		/* 141 */ self::YY_NO_ANCHOR,
		/* 142 */ self::YY_NO_ANCHOR,
		/* 143 */ self::YY_NO_ANCHOR,
		/* 144 */ self::YY_NO_ANCHOR,
		/* 145 */ self::YY_NO_ANCHOR,
		/* 146 */ self::YY_NO_ANCHOR,
		/* 147 */ self::YY_NO_ANCHOR,
		/* 148 */ self::YY_NO_ANCHOR,
		/* 149 */ self::YY_NO_ANCHOR,
		/* 150 */ self::YY_NO_ANCHOR,
		/* 151 */ self::YY_NO_ANCHOR,
		/* 152 */ self::YY_NO_ANCHOR,
		/* 153 */ self::YY_NO_ANCHOR,
		/* 154 */ self::YY_NO_ANCHOR,
		/* 155 */ self::YY_NO_ANCHOR,
		/* 156 */ self::YY_NO_ANCHOR,
		/* 157 */ self::YY_NO_ANCHOR,
		/* 158 */ self::YY_NO_ANCHOR,
		/* 159 */ self::YY_NO_ANCHOR,
		/* 160 */ self::YY_NO_ANCHOR,
		/* 161 */ self::YY_NO_ANCHOR,
		/* 162 */ self::YY_NO_ANCHOR,
		/* 163 */ self::YY_NO_ANCHOR,
		/* 164 */ self::YY_NO_ANCHOR,
		/* 165 */ self::YY_NO_ANCHOR,
		/* 166 */ self::YY_NO_ANCHOR,
		/* 167 */ self::YY_NO_ANCHOR,
		/* 168 */ self::YY_NO_ANCHOR,
		/* 169 */ self::YY_NO_ANCHOR,
		/* 170 */ self::YY_NO_ANCHOR,
		/* 171 */ self::YY_NO_ANCHOR,
		/* 172 */ self::YY_NO_ANCHOR,
		/* 173 */ self::YY_NO_ANCHOR,
		/* 174 */ self::YY_NO_ANCHOR,
		/* 175 */ self::YY_NO_ANCHOR,
		/* 176 */ self::YY_NO_ANCHOR,
		/* 177 */ self::YY_NO_ANCHOR,
		/* 178 */ self::YY_NO_ANCHOR,
		/* 179 */ self::YY_NO_ANCHOR,
		/* 180 */ self::YY_NO_ANCHOR,
		/* 181 */ self::YY_NO_ANCHOR,
		/* 182 */ self::YY_NO_ANCHOR,
		/* 183 */ self::YY_NO_ANCHOR,
		/* 184 */ self::YY_NO_ANCHOR,
		/* 185 */ self::YY_NO_ANCHOR,
		/* 186 */ self::YY_NO_ANCHOR,
		/* 187 */ self::YY_NO_ANCHOR,
		/* 188 */ self::YY_NO_ANCHOR,
		/* 189 */ self::YY_NO_ANCHOR,
		/* 190 */ self::YY_NO_ANCHOR,
		/* 191 */ self::YY_NO_ANCHOR,
		/* 192 */ self::YY_NO_ANCHOR,
		/* 193 */ self::YY_NO_ANCHOR,
		/* 194 */ self::YY_NO_ANCHOR,
		/* 195 */ self::YY_NO_ANCHOR,
		/* 196 */ self::YY_NO_ANCHOR,
		/* 197 */ self::YY_NO_ANCHOR,
		/* 198 */ self::YY_NO_ANCHOR,
		/* 199 */ self::YY_NO_ANCHOR,
		/* 200 */ self::YY_NO_ANCHOR,
		/* 201 */ self::YY_NO_ANCHOR,
		/* 202 */ self::YY_NO_ANCHOR,
		/* 203 */ self::YY_NO_ANCHOR,
		/* 204 */ self::YY_NO_ANCHOR,
		/* 205 */ self::YY_NO_ANCHOR,
		/* 206 */ self::YY_NO_ANCHOR,
		/* 207 */ self::YY_NO_ANCHOR,
		/* 208 */ self::YY_NO_ANCHOR,
		/* 209 */ self::YY_NO_ANCHOR,
		/* 210 */ self::YY_NO_ANCHOR,
		/* 211 */ self::YY_NO_ANCHOR,
		/* 212 */ self::YY_NO_ANCHOR,
		/* 213 */ self::YY_NO_ANCHOR,
		/* 214 */ self::YY_NO_ANCHOR,
		/* 215 */ self::YY_NO_ANCHOR,
		/* 216 */ self::YY_NO_ANCHOR,
		/* 217 */ self::YY_NO_ANCHOR,
		/* 218 */ self::YY_NO_ANCHOR,
		/* 219 */ self::YY_NO_ANCHOR,
		/* 220 */ self::YY_NO_ANCHOR,
		/* 221 */ self::YY_NO_ANCHOR,
		/* 222 */ self::YY_NO_ANCHOR,
		/* 223 */ self::YY_NO_ANCHOR,
		/* 224 */ self::YY_NO_ANCHOR,
		/* 225 */ self::YY_NO_ANCHOR,
		/* 226 */ self::YY_NO_ANCHOR,
		/* 227 */ self::YY_NO_ANCHOR,
		/* 228 */ self::YY_NO_ANCHOR,
		/* 229 */ self::YY_NO_ANCHOR,
		/* 230 */ self::YY_NO_ANCHOR,
		/* 231 */ self::YY_NO_ANCHOR,
		/* 232 */ self::YY_NO_ANCHOR
	];
		static $yy_cmap = [
 3, 3, 3, 3, 3, 3, 3, 3, 3, 64, 65, 3, 64, 4, 3, 3, 3, 3, 3, 3,
 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 64, 52, 43, 5, 3, 48, 49, 37,
 58, 59, 2, 47, 56, 40, 42, 1, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 57, 53,
 46, 45, 44, 63, 3, 34, 34, 34, 34, 39, 41, 30, 30, 30, 30, 30, 36, 30, 30, 30,
 30, 30, 30, 30, 30, 35, 30, 30, 33, 30, 30, 60, 38, 61, 50, 30, 3, 6, 10, 14,
 19, 12, 20, 24, 16, 18, 30, 13, 21, 22, 17, 9, 28, 30, 11, 15, 8, 7, 29, 26,
 23, 27, 25, 54, 51, 55, 62, 3, 0, 0,];

		static $yy_rmap = [
 0, 1, 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1,
 1, 1, 1, 18, 1, 1, 1, 1, 1, 1, 1, 19, 1, 1, 1, 20, 21, 22, 23, 1,
 1, 1, 24, 1, 25, 1, 1, 1, 26, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20, 20,
 27, 28, 1, 1, 1, 1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 1, 29, 30, 31, 32,
 1, 1, 1, 1, 1, 33, 34, 35, 36, 1, 37, 38, 30, 39, 35, 40, 41, 42, 43, 44,
 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 20, 82, 83,
 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
 144, 145, 20, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,];

		static $yy_nxt = [
[
 1, 2, 3, 4, -1, 5, 6, 210, 220, 222, 224, 225, 226, 222, 227, 228, 222, 222, 98, 108,
 155, 229, 222, 222, 230, 222, 231, 222, 222, 232, 222, 7, 99, 222, 222, 222, 113, 97, 4, 222,
 8, 222, 9, 107, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
 26, 27, 28, 29, 30, 30,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 31, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 5, 5, 5, -1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
 5, 5, 5, 5, 5, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 156, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, 109, -1, -1, -1, -1, 96, -1, -1, -1, -1, -1, -1, -1,
 -1, 109, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 7, -1, -1, 109, 109, -1, -1, 96,
 -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 39, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, 120, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 44, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 47, 48, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 49, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 21, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 52, -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 31, 31, 31, -1, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
 31, 31, 31, 31, 31, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 184, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 126, -1, -1, -1, -1, -1, -1, -1,
 100, 100, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1, 100, -1, -1, 126,
 -1, 100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, 101, -1, -1, -1, -1, 96, -1, -1, -1, -1, -1, -1, -1,
 -1, 101, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 38, -1, -1, 101, 101, -1, -1, 96,
 -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 128, -1, -1, -1, -1, -1, -1, -1,
 102, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 42, -1, -1, -1, 102, -1, -1, 128,
 -1, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 103, 103, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, -1, -1, 103, -1, -1, -1,
 -1, 103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 61, 104, -1, -1, 61, -1, 61, -1, 61, -1, -1, -1, -1, 61,
 61, 104, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, -1, 61, 104, 104, -1, -1, 61,
 -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, -1, -1, -1, -1, -1, -1,
 124, -1, -1, -1, -1, -1, -1, 124, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, -1, 118, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 115, 222, 222,
 35, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, 109, -1, -1, -1, -1, 96, -1, -1, -1, -1, -1, -1, -1,
 -1, 109, -1, 106, -1, -1, -1, -1, -1, -1, -1, 38, 38, 106, -1, 109, 109, -1, -1, 96,
 -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 95, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, 61, -1, 61, -1, 61, -1, -1, -1, -1, 61,
 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, -1, 61, -1, -1, -1, -1, 61,
 -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 122, 114,
 114, 114, 114, 43, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
 114, 114, 114, 114, 114, 114,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 36, 222, 222, 172, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 100, 100, -1, -1, -1, -1, -1, -1, -1, -1, -1, 110, 110, -1, -1, -1, 100, -1, -1, -1,
 -1, 100, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 102, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, 111, 111, -1, -1, -1, 102, -1, -1, -1,
 -1, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, 112, -1, 222,
 -1, 222, -1, 114, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 58, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 62, 118, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 59, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 116, 116, 116, -1, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
 116, 116, 116, 116, 116, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 66, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 67, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, 114, 114, 114, -1, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
 114, 114, 114, 114, 114, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 68, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 60, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 69, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 110, 110, -1, -1, -1, -1, -1, -1, -1,
 130, -1, -1, -1, -1, -1, -1, 130, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 70, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 111, 111, -1, -1, -1, -1, -1, -1, -1,
 132, -1, -1, -1, -1, -1, -1, 132, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 71, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 110, 110, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 72, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 111, 111, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 73,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 1, 94, 105, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 74, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 75, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 76, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 77, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 78, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 79, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 80, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 81, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 82, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 83, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 84,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 85, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 86, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 87, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 88, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 89, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 90,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 91, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 92, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 93, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 117, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 212, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 119, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 221, 222, 222, 176, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 211, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 177, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 178, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 223, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 121, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 123, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 179, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 125, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 180, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 127, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 181, 222, 222, 222, 222, 214, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 182, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 183, 215, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 216, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 185, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 129, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 131, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 133, 222,
 222, 217, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 135, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 136, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 190, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 192, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 193, 222, 222, 222, 222, 222, 222, 137, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 194, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 138, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 196, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 199, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 200, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 139, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 140, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 202, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 203,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 141, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 218, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 142, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 219, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 143, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 144, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 145, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 146, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 147, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 148, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 204, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 205, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 206, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 149, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 150, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 209, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 151, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 152, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 153, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 154, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 158, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 189, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 186, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 187, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 195, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 197, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 198, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 201, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 207, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 208, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 159, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 188, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 191, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 160, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 161, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 162, 222, 222,
 222, 163, 222, 164, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 165, 222, 222, 166, 222, 222, 222, 222, 222, 222, 167, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 168, 222, 222, 222, 222, 222, 222, 222, 169, 222, 170, 222,
 222, 222, 222, 222, 222, 222, 171, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 173, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 174, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 213, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
[
 -1, -1, -1, -1, -1, -1, 222, 222, 222, 175, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 157, 157, 222, 222, 222, 222, -1, -1, 222,
 -1, 222, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1,
],
];

	public function /*Yytoken*/ nextToken () {
		$yy_anchor = self::YY_NO_ANCHOR;
		$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
		$yy_next_state = self::YY_NO_STATE;
		$yy_last_accept_state = self::YY_NO_STATE;
		$yy_initial = true;

		$this->yy_mark_start();

		$yy_this_accept = self::$yy_acpt[$yy_state];
		if (self::YY_NOT_ACCEPT !== $yy_this_accept) {
			$yy_last_accept_state = $yy_state;
			$this->yy_mark_end();
		}

		while (true) {
			$yy_lookahead = self::YY_BOL;

			if (!$yy_initial || !$this->yy_at_bol) {
				$yy_lookahead = $this->yy_advance();
			}

			$yy_next_state = self::$yy_nxt[self::$yy_rmap[$yy_state]][self::$yy_cmap[$yy_lookahead]];

			if (self::YY_EOF === $yy_lookahead && $yy_initial) {
				return null;
			}

			if (self::YY_F !== $yy_next_state) {
				$yy_state = $yy_next_state;
				$yy_initial = false;

				$yy_this_accept = self::$yy_acpt[$yy_state];
				if (self::YY_NOT_ACCEPT !== $yy_this_accept) {
					$yy_last_accept_state = $yy_state;
					$this->yy_mark_end();
				}
			} else {
				if (self::YY_NO_STATE === $yy_last_accept_state) {
					throw new \Exception("Lexical Error: Unmatched Input.");
				} else {
					$yy_anchor = self::$yy_acpt[$yy_last_accept_state];

					if (0 !== (self::YY_END & $yy_anchor)) {
						$this->yy_move_end();
					}

					$this->yy_to_mark();

					switch ($yy_last_accept_state) {
					case 1: 
					case -2:
						break;

					case 2: { return $this->createToken(CParser::TK_SLASH); }
					case -3:
						break;

					case 3: { return $this->createToken(CParser::TK_STAR); }
					case -4:
						break;

					case 4: { /* ignore bad characters */ }
					case -5:
						break;

					case 5: { return $this->createToken(CParser::TK_PRAGMA); }
					case -6:
						break;

					case 6: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -7:
						break;

					case 7: { return $this->createToken(CParser::TK_CONSTANT); }
					case -8:
						break;

					case 8: { return $this->createToken(CParser::TK_MINUS); }
					case -9:
						break;

					case 9: { return $this->createToken(CParser::TK_PERIOD); }
					case -10:
						break;

					case 10: { return $this->createToken(CParser::TK_RANGLE); }
					case -11:
						break;

					case 11: { return $this->createToken(CParser::TK_EQUALS); }
					case -12:
						break;

					case 12: { return $this->createToken(CParser::TK_LANGLE); }
					case -13:
						break;

					case 13: { return $this->createToken(CParser::TK_PLUS); }
					case -14:
						break;

					case 14: { return $this->createToken(CParser::TK_PERCENT); }
					case -15:
						break;

					case 15: { return $this->createToken(CParser::TK_AMP); }
					case -16:
						break;

					case 16: { return $this->createToken(CParser::TK_CARET); }
					case -17:
						break;

					case 17: { return $this->createToken(CParser::TK_PIPE); }
					case -18:
						break;

					case 18: { return $this->createToken(CParser::TK_EXCLAM); }
					case -19:
						break;

					case 19: { return $this->createToken(CParser::TK_SEMIC); }
					case -20:
						break;

					case 20: { return $this->createToken(CParser::TK_LCURLY); }
					case -21:
						break;

					case 21: { return $this->createToken(CParser::TK_RCURLY); }
					case -22:
						break;

					case 22: { return $this->createToken(CParser::TK_COMMA); }
					case -23:
						break;

					case 23: { return $this->createToken(CParser::TK_COLON); }
					case -24:
						break;

					case 24: { return $this->createToken(CParser::TK_LPAREN); }
					case -25:
						break;

					case 25: { return $this->createToken(CParser::TK_RPAREN); }
					case -26:
						break;

					case 26: { return $this->createToken(CParser::TK_LSQUARE); }
					case -27:
						break;

					case 27: { return $this->createToken(CParser::TK_RSQUARE); }
					case -28:
						break;

					case 28: { return $this->createToken(CParser::TK_TILDE); }
					case -29:
						break;

					case 29: { return $this->createToken(CParser::TK_QUESTION); }
					case -30:
						break;

					case 30: { }
					case -31:
						break;

					case 31: { return $this->createToken(CParser::TK_COMMENT); }
					case -32:
						break;

					case 32: { 
								$this->commentTok = $this->createToken(CParser::TK_COMMENT);
								$this->yybegin(self::COMMENT);
						    }
					case -33:
						break;

					case 33: { return $this->createToken(CParser::TK_DIV_ASSIGN); }
					case -34:
						break;

					case 34: { return $this->createToken(CParser::TK_MUL_ASSIGN); }
					case -35:
						break;

					case 35: { return $this->createToken(CParser::TK_IF); }
					case -36:
						break;

					case 36: { return $this->createToken(CParser::TK_DO); }
					case -37:
						break;

					case 37: { return $this->createToken(CParser::TK_CONSTANT); }
					case -38:
						break;

					case 38: { return $this->createToken(CParser::TK_CONSTANT); }
					case -39:
						break;

					case 39: { return $this->createToken(CParser::TK_DEC_OP); }
					case -40:
						break;

					case 40: { return $this->createToken(CParser::TK_PTR_OP); }
					case -41:
						break;

					case 41: { return $this->createToken(CParser::TK_SUB_ASSIGN); }
					case -42:
						break;

					case 42: { return $this->createToken(CParser::TK_CONSTANT); }
					case -43:
						break;

					case 43: { return $this->createToken(CParser::TK_STRING_LITERAL); }
					case -44:
						break;

					case 44: { return $this->createToken(CParser::TK_RIGHT_OP); }
					case -45:
						break;

					case 45: { return $this->createToken(CParser::TK_GE_OP); }
					case -46:
						break;

					case 46: { return $this->createToken(CParser::TK_EQ_OP); }
					case -47:
						break;

					case 47: { return $this->createToken(CParser::TK_LE_OP); }
					case -48:
						break;

					case 48: { return $this->createToken(CParser::TK_LEFT_OP); }
					case -49:
						break;

					case 49: { return $this->createToken(CParser::TK_ADD_ASSIGN); }
					case -50:
						break;

					case 50: { return $this->createToken(CParser::TK_INC_OP); }
					case -51:
						break;

					case 51: { return $this->createToken(CParser::TK_MOD_ASSIGN); }
					case -52:
						break;

					case 52: { return $this->createToken(CParser::TK_AND_ASSIGN); }
					case -53:
						break;

					case 53: { return $this->createToken(CParser::TK_AND_OP); }
					case -54:
						break;

					case 54: { return $this->createToken(CParser::TK_XOR_ASSIGN); }
					case -55:
						break;

					case 55: { return $this->createToken(CParser::TK_OR_ASSIGN); }
					case -56:
						break;

					case 56: { return $this->createToken(CParser::TK_OR_OP); }
					case -57:
						break;

					case 57: { return $this->createToken(CParser::TK_NE_OP); }
					case -58:
						break;

					case 58: { return $this->createToken(CParser::TK_INT); }
					case -59:
						break;

					case 59: { return $this->createToken(CParser::TK_FOR); }
					case -60:
						break;

					case 60: { return $this->createToken(CParser::TK_CONSTANT); }
					case -61:
						break;

					case 61: { return $this->createToken(CParser::TK_CONSTANT); }
					case -62:
						break;

					case 62: { return $this->createToken(CParser::TK_CONSTANT); }
					case -63:
						break;

					case 63: { return $this->createToken(CParser::TK_ELLIPSIS); }
					case -64:
						break;

					case 64: { return $this->createToken(CParser::TK_RIGHT_ASSIGN); }
					case -65:
						break;

					case 65: { return $this->createToken(CParser::TK_LEFT_ASSIGN); }
					case -66:
						break;

					case 66: { return $this->createToken(CParser::TK_AUTO); }
					case -67:
						break;

					case 67: { return $this->createToken(CParser::TK_ENUM); }
					case -68:
						break;

					case 68: { return $this->createToken(CParser::TK_ELSE); }
					case -69:
						break;

					case 69: { return $this->createToken(CParser::TK_CASE); }
					case -70:
						break;

					case 70: { return $this->createToken(CParser::TK_CHAR); }
					case -71:
						break;

					case 71: { return $this->createToken(CParser::TK_LONG); }
					case -72:
						break;

					case 72: { return $this->createToken(CParser::TK_GOTO); }
					case -73:
						break;

					case 73: { return $this->createToken(CParser::TK_VOID); }
					case -74:
						break;

					case 74: { return $this->createToken(CParser::TK_UNION); }
					case -75:
						break;

					case 75: { return $this->createToken(CParser::TK_BREAK); }
					case -76:
						break;

					case 76: { return $this->createToken(CParser::TK_CONST); }
					case -77:
						break;

					case 77: { return $this->createToken(CParser::TK_SHORT); }
					case -78:
						break;

					case 78: { return $this->createToken(CParser::TK_FLOAT); }
					case -79:
						break;

					case 79: { return $this->createToken(CParser::TK_WHILE); }
					case -80:
						break;

					case 80: { return $this->createToken(CParser::TK_RETURN); }
					case -81:
						break;

					case 81: { return $this->createToken(CParser::TK_EXTERN); }
					case -82:
						break;

					case 82: { return $this->createToken(CParser::TK_STATIC); }
					case -83:
						break;

					case 83: { return $this->createToken(CParser::TK_STRUCT); }
					case -84:
						break;

					case 84: { return $this->createToken(CParser::TK_SIGNED); }
					case -85:
						break;

					case 85: { return $this->createToken(CParser::TK_SIZEOF); }
					case -86:
						break;

					case 86: { return $this->createToken(CParser::TK_SWITCH); }
					case -87:
						break;

					case 87: { return $this->createToken(CParser::TK_DOUBLE); }
					case -88:
						break;

					case 88: { return $this->createToken(CParser::TK_TYPEDEF); }
					case -89:
						break;

					case 89: { return $this->createToken(CParser::TK_DEFAULT); }
					case -90:
						break;

					case 90: { return $this->createToken(CParser::TK_UNSIGNED); }
					case -91:
						break;

					case 91: { return $this->createToken(CParser::TK_REGISTER); }
					case -92:
						break;

					case 92: { return $this->createToken(CParser::TK_CONTINUE); }
					case -93:
						break;

					case 93: { return $this->createToken(CParser::TK_VOLATILE); }
					case -94:
						break;

					case 94: { $this->commentTok->value .= $this->yytext(); }
					case -95:
						break;

					case 95: { 
								$this->commentTok->value .= $this->yytext();
							    $this->yybegin(self::YYINITIAL); 
							    return $this->commentTok;
							}
					case -96:
						break;

					case 97: { /* ignore bad characters */ }
					case -97:
						break;

					case 98: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -98:
						break;

					case 99: { return $this->createToken(CParser::TK_CONSTANT); }
					case -99:
						break;

					case 100: { return $this->createToken(CParser::TK_CONSTANT); }
					case -100:
						break;

					case 101: { return $this->createToken(CParser::TK_CONSTANT); }
					case -101:
						break;

					case 102: { return $this->createToken(CParser::TK_CONSTANT); }
					case -102:
						break;

					case 103: { return $this->createToken(CParser::TK_CONSTANT); }
					case -103:
						break;

					case 104: { return $this->createToken(CParser::TK_CONSTANT); }
					case -104:
						break;

					case 105: { $this->commentTok->value .= $this->yytext(); }
					case -105:
						break;

					case 107: { /* ignore bad characters */ }
					case -106:
						break;

					case 108: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -107:
						break;

					case 109: { return $this->createToken(CParser::TK_CONSTANT); }
					case -108:
						break;

					case 110: { return $this->createToken(CParser::TK_CONSTANT); }
					case -109:
						break;

					case 111: { return $this->createToken(CParser::TK_CONSTANT); }
					case -110:
						break;

					case 113: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -111:
						break;

					case 115: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -112:
						break;

					case 117: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -113:
						break;

					case 119: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -114:
						break;

					case 121: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -115:
						break;

					case 123: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -116:
						break;

					case 125: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -117:
						break;

					case 127: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -118:
						break;

					case 129: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -119:
						break;

					case 131: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -120:
						break;

					case 133: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -121:
						break;

					case 135: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -122:
						break;

					case 136: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -123:
						break;

					case 137: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -124:
						break;

					case 138: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -125:
						break;

					case 139: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -126:
						break;

					case 140: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -127:
						break;

					case 141: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -128:
						break;

					case 142: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -129:
						break;

					case 143: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -130:
						break;

					case 144: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -131:
						break;

					case 145: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -132:
						break;

					case 146: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -133:
						break;

					case 147: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -134:
						break;

					case 148: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -135:
						break;

					case 149: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -136:
						break;

					case 150: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -137:
						break;

					case 151: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -138:
						break;

					case 152: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -139:
						break;

					case 153: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -140:
						break;

					case 154: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -141:
						break;

					case 155: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -142:
						break;

					case 156: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -143:
						break;

					case 157: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -144:
						break;

					case 158: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -145:
						break;

					case 159: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -146:
						break;

					case 160: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -147:
						break;

					case 161: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -148:
						break;

					case 162: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -149:
						break;

					case 163: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -150:
						break;

					case 164: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -151:
						break;

					case 165: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -152:
						break;

					case 166: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -153:
						break;

					case 167: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -154:
						break;

					case 168: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -155:
						break;

					case 169: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -156:
						break;

					case 170: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -157:
						break;

					case 171: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -158:
						break;

					case 172: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -159:
						break;

					case 173: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -160:
						break;

					case 174: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -161:
						break;

					case 175: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -162:
						break;

					case 176: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -163:
						break;

					case 177: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -164:
						break;

					case 178: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -165:
						break;

					case 179: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -166:
						break;

					case 180: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -167:
						break;

					case 181: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -168:
						break;

					case 182: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -169:
						break;

					case 183: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -170:
						break;

					case 184: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -171:
						break;

					case 185: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -172:
						break;

					case 186: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -173:
						break;

					case 187: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -174:
						break;

					case 188: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -175:
						break;

					case 189: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -176:
						break;

					case 190: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -177:
						break;

					case 191: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -178:
						break;

					case 192: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -179:
						break;

					case 193: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -180:
						break;

					case 194: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -181:
						break;

					case 195: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -182:
						break;

					case 196: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -183:
						break;

					case 197: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -184:
						break;

					case 198: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -185:
						break;

					case 199: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -186:
						break;

					case 200: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -187:
						break;

					case 201: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -188:
						break;

					case 202: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -189:
						break;

					case 203: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -190:
						break;

					case 204: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -191:
						break;

					case 205: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -192:
						break;

					case 206: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -193:
						break;

					case 207: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -194:
						break;

					case 208: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -195:
						break;

					case 209: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -196:
						break;

					case 210: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -197:
						break;

					case 211: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -198:
						break;

					case 212: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -199:
						break;

					case 213: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -200:
						break;

					case 214: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -201:
						break;

					case 215: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -202:
						break;

					case 216: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -203:
						break;

					case 217: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -204:
						break;

					case 218: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -205:
						break;

					case 219: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -206:
						break;

					case 220: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -207:
						break;

					case 221: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -208:
						break;

					case 222: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -209:
						break;

					case 223: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -210:
						break;

					case 224: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -211:
						break;

					case 225: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -212:
						break;

					case 226: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -213:
						break;

					case 227: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -214:
						break;

					case 228: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -215:
						break;

					case 229: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -216:
						break;

					case 230: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -217:
						break;

					case 231: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -218:
						break;

					case 232: { return $this->createToken(CParser::TK_IDENTIFIER); }
					case -219:
						break;

						default:
							$this->yy_error('INTERNAL', false);

						case -1:

					}

					$yy_initial = true;
					$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
					$yy_next_state = self::YY_NO_STATE;
					$yy_last_accept_state = self::YY_NO_STATE;

					$this->yy_mark_start();

					$yy_this_accept = self::$yy_acpt[$yy_state];
					if (self::YY_NOT_ACCEPT !== $yy_this_accept) {
						$yy_last_accept_state = $yy_state;
						$this->yy_mark_end();
					}
				}
			}
		}
	}
}
